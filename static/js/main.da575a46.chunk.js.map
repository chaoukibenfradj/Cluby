{"version":3,"sources":["assets/imgs/logo-light.png","components/header-user-info/header-user-info.js","components/header-user-info/index.js","components/club-view/dashboard/dashboard.js","const.js","services/event.service.js","services/institute.service.js","services/domain.service.js","services/firebase.service.js","components/events/add-event/add-event.js","components/events/events.js","services/club.service.js","components/clubs/clubs.js","services/sponsor.service.js","components/sponsors/sponsors.js","components/emails/new-email-modal/new-email-modal.js","components/emails/new-email-modal/index.js","components/emails/emails.js","components/edit-profile/edit-profile.js","components/edit-profile/index.js","components/events/event-details/event-details.js","components/club-view/club-view.js","components/backoffice-layout/backoffice-layout.js","components/backoffice-layout/index.js","components/clubs/club-details/club-details.js","components/sign-in/sign-in.js","components/sign-up/sign-up.js","components/student-view/student-view.js","components/sponsor-view/sponsor-view.js","components/sign-in/index.js","components/sign-up/index.js","components/visitor-view/visitor-view.js","components/website-layout/website-layout.js","components/app/app.js","serviceWorker.js","index.js","assets/imgs/placeholder.png"],"names":["module","exports","HeaderUserInfo","props","handleUserPopoverVisible","isUserPopoverVisible","setState","onSignOut","publishCurrentUserUpdate","history","push","onEditProfile","state","initials","this","currentUser","firstName","length","lastName","charAt","toUpperCase","content","className","email","type","onClick","placement","trigger","visible","onVisibleChange","getCurrentUserInitials","icon","Component","withRouter","Dashboard","BASE_URL","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAllEvents","a","axios","get","getEventById","id","studentCancelParticipation","eventId","userId","delete","data","headers","addStudentParticipation","post","addEvent","values","clubId","body","Name","name","BeginDate","moment","dateTime","toISOString","EndDate","price","Photo","photo","Description","description","Location","location","Domain","domain","Club","Institute","institute","NumberParticipation","Number","console","log","updateEvent","Id","put","getEventByClubId","getListParticipators","idEvent","deleteEvent","getAllInstitutes","getAllDomains","uploadEventCover","file","blob","Blob","firebase","initializeApp","ref","storage","Date","valueOf","child","Option","Select","AddEvent","showDrawer","onClose","normFile","e","Array","isArray","fileList","onAddEvent","event","preventDefault","isUpdate","form","validateFields","errors","updateValues","beginDate","endDate","club","creationDate","oldValues","Object","assign","selectedEvent","numberParticipation","checkChangedValues","obj1","obj2","result","is","keys","concat","forEach","key","value","undefined","then","isLoading","setTimeout","window","reload","catch","err","upload","originFileObj","snapshot","getDownloadURL","url","localStorage","getItem","listInstitutes","eventsInSameDate","listEvents","listDomains","setFieldsValue","filter","element","format","listData","map","item","status","text","Modal","confirm","title","width","fullscreen","mode","dateCellRender","onOk","onCancel","fieldsError","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","style","float","right","bodyStyle","paddingBottom","layout","hideRequiredMark","onSubmit","gutter","span","Item","validateStatus","help","label","rules","required","whitespace","message","disabled","placeholder","display","justifyContent","color","fontSize","openCalendar","RangePicker","disabledDate","d","isSameOrBefore","showTime","defaultValue","getPopupContainer","parentNode","checkEventsSameDate","pattern","min","valuePropName","getValueFromEvent","listType","TextArea","rows","position","bottom","borderTop","padding","background","textAlign","marginRight","htmlType","loading","some","field","Form","create","Meta","Card","Search","Input","Events","createSkeleton","row","i","col","j","active","createEventRows","listEventsSearch","chunkedArray","slice","alignItems","flexDirection","hoverable","borderRadius","cover","alt","src","onError","target","diff","now","onSearchInput","resetList","listEventFiltred","listEventsInit","toLowerCase","indexOf","JSON","parse","fetchType","domains","institutes","getEvents","getClubEvents","role","onSearch","showSearch","optionFilterProp","onChange","bind","onFocus","onBlur","filterOption","input","option","children","marginLeft","onChangeInst","getAllClubs","Clubs","createClubRows","listClubsSearch","listClubFiltred","listClubsInit","getAllSponsors","Sponsors","createSponsorRows","listSponsorsSearch","listSponsorFiltred","listSponsorsInit","NewEmailModal","onSend","receiverEmailAddress","footer","closable","initialValue","Emails","emailsType","onEmailsSelectorChange","selectedEmail","loadEmails","onEmailSelection","showNewEmailModal","newEmailModalVisibility","hideNewEmailModal","formRef","resetFields","saveFormRef","sendEmail","response","error","emails","Group","buttonStyle","Button","sort","b","sendDate","index","subject","sender","receiver","substring","flex","shape","wrappedComponentRef","EditProfile","EventDetails","openSuccessNotification","notification","success","openErrorNotification","warn","showListPartModal","info","itemLayout","dataSource","eventParticipators","renderItem","avatar","href","user","dateParticipate","match","params","getAllParticipators","getEventByIdRefresh","okText","okType","cancelText","orientation","to","cancelStudentParticipation","addStdntParticipation","height","lineHeight","showDeleteConfirm","ClubView","setItem","exact","path","component","Header","Layout","Content","Sider","SubMenu","Menu","CLUB_MAIN_MENU_ITEMS","link","BackofficeLayout","toggleSider","isSiderCollapsed","userView","mainMenuItems","mainMenu","theme","selectedKeys","pathname","borderRight","collapsed","logoLight","collapsedWidth","collapsible","ClubDetails","eventsCount","region","SignIn","onSignIn","emailError","passwordError","block","SignUp","confirmPassword","rule","callback","getFieldValue","onSignUp","Role","selectedProfileType","FirstName","LastName","Email","Password","credentials","onProfileTypeSelection","validator","StudentView","SponsorView","VisitorView","WebsiteLayout","currentUserSubject","Subject","next","App","currentUserSubscription","subscribe","stringify","unsubscribe","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da575a46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-light.7ee40555.png\";","import React, { Component } from 'react';\r\n\r\nimport { Avatar, Popover, Button, Divider } from 'antd';\r\n\r\nimport { publishCurrentUserUpdate } from '../app/app.js';\r\n\r\n\r\nexport default class HeaderUserInfo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUserPopoverVisible: false,\r\n        };\r\n    }\r\n\r\n    handleUserPopoverVisible = isUserPopoverVisible => {\r\n        this.setState({\r\n            isUserPopoverVisible\r\n        });\r\n    };\r\n\r\n    getCurrentUserInitials() {\r\n        let initials = '';\r\n        if (\r\n            this.props.currentUser && \r\n            this.props.currentUser.firstName && this.props.currentUser.firstName.length > 0 && \r\n            this.props.currentUser.lastName && this.props.currentUser.lastName.length > 0\r\n        ) {\r\n            initials = this.props.currentUser.firstName.charAt(0).toUpperCase() + this.props.currentUser.lastName.charAt(0).toUpperCase();\r\n        }\r\n        return initials;\r\n    }\r\n\r\n    onSignOut = () => {\r\n        publishCurrentUserUpdate(null);\r\n        this.props.history.push('/sign-in');\r\n    }\r\n\r\n    onEditProfile = () => {\r\n        this.props.history.push('/edit-profile');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Popover\r\n                content={\r\n                    <div className=\"popover-content\">\r\n                        <div className=\"popover-header\">\r\n                            <p className=\"fullname\">{this.props.currentUser.firstName + ' ' + this.props.currentUser.lastName}</p>\r\n                            <p className=\"email\">{this.props.currentUser.email}</p>\r\n                        </div>\r\n                        <Divider />\r\n                        <div className=\"popover-actions\">\r\n                            <Button type=\"link\" onClick={this.onEditProfile}>Edit profile</Button>\r\n                            <Button type=\"link\" onClick={this.onSignOut}>Sign out</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                placement=\"bottomRight\"\r\n                trigger=\"click\"\r\n                visible={this.state.isUserPopoverVisible}\r\n                onVisibleChange={this.handleUserPopoverVisible}\r\n            >\r\n                {\r\n                    (this.getCurrentUserInitials() && this.getCurrentUserInitials().length > 0) ? (\r\n                        <Avatar>{this.getCurrentUserInitials()}</Avatar>\r\n                    ) : (\r\n                        <Avatar icon=\"user\" />\r\n                    )\r\n                }\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n","import { withRouter } from 'react-router-dom';\r\n\r\nimport HeaderUserInfo from './header-user-info';\r\n\r\nexport default withRouter(HeaderUserInfo);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h2>dashboard</h2>\r\n        )\r\n    }\r\n\r\n}\r\n","export const BASE_URL = 'https://cors-any-chaouki.herokuapp.com/https://cluby1.herokuapp.com/';\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyAM78zG2ciOXV0a4CexJCcyvMGLCyDzLWs\",\r\n    authDomain: \"platedetectorproject.firebaseapp.com\",\r\n    databaseURL: \"https://platedetectorproject.firebaseio.com\",\r\n    projectId: \"platedetectorproject\",\r\n    storageBucket: \"platedetectorproject.appspot.com\",\r\n    messagingSenderId: \"824986743444\",\r\n    appId: \"1:824986743444:web:4a85c0f9a3b30f0072ba81\"\r\n};\r\n\r\nexport function checkChangedValues(obj1, obj2) {\r\n    const result = {};\r\n    if (Object.is(obj1, obj2)) {\r\n        return undefined;\r\n    }\r\n    if (!obj2 || typeof obj2 !== 'object') {\r\n        return obj2;\r\n    }\r\n    Object.keys(obj1 || {}).concat(Object.keys(obj2 || {})).forEach(key => {\r\n        if(obj2[key] !== obj1[key] && !Object.is(obj1[key], obj2[key])) {\r\n            result[key] = obj2[key];\r\n        }\r\n        if(typeof obj2[key] === 'object' && typeof obj1[key] === 'object') {\r\n            const value = checkChangedValues(obj1[key], obj2[key]);\r\n            if (value !== undefined) {\r\n                result[key] = value;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}","import axios from \"axios\";\r\nimport { BASE_URL } from \"../const\";\r\nimport moment from 'moment';\r\n\r\nexport const getAllEvents = async () => {\r\n    return await axios.get(BASE_URL + 'api/v1/events');\r\n}\r\n\r\nexport const getEventById = async (id) => {\r\n    return await axios.get(BASE_URL + 'api/v1/events/' + id);\r\n}\r\n\r\nexport const studentCancelParticipation = async (eventId, userId) => {\r\n    return await axios.delete(BASE_URL + 'api/v1/events/participate', {\r\n        data: { eventId: eventId, userId: userId },\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n    );\r\n}\r\n\r\nexport const addStudentParticipation = async (eventId, userId) => {\r\n    return await axios.post(BASE_URL + 'api/v1/events/participate', { eventId: eventId, userId: userId });\r\n}\r\n\r\nexport const addEvent = async (values, clubId) => {\r\n    const body = {\r\n        Name: values.name,\r\n        BeginDate: moment(values.dateTime[0]).toISOString(),\r\n        EndDate: moment(values.dateTime[1]).toISOString(),\r\n        price: values.price,\r\n        Photo: values.photo,\r\n        Description: values.description,\r\n        Location: values.location,\r\n        Domain: values.domain,\r\n        Club: clubId,\r\n        Institute: values.institute,\r\n        NumberParticipation: Number(values.NumberParticipation)\r\n    }\r\n    console.log(\"Add Body\", body);\r\n    return await axios.post(BASE_URL + 'api/v1/events', body);\r\n}\r\n\r\nexport const updateEvent = async (values, eventId) => {\r\n    const body = {\r\n        Id : eventId,\r\n        Name: values.name,\r\n        BeginDate: moment(values.dateTime[0]).toISOString(),\r\n        EndDate: moment(values.dateTime[1]).toISOString(),\r\n        price: values.price,\r\n        Photo: values.photo,\r\n        Description: values.description,\r\n        Location: values.location,\r\n        Domain: values.domain,\r\n        Institute: values.institute,\r\n        NumberParticipation: Number(values.NumberParticipation)\r\n    }\r\n    console.log(\"body for update : \",body);\r\n    return await axios.put(BASE_URL + 'api/v1/events', body);\r\n}\r\n\r\nexport const getEventByClubId = async (id) => {\r\n    return await axios.get(BASE_URL + `api/v1/events/club/${id}`)\r\n}\r\n\r\nexport const getListParticipators = async (idEvent) => {\r\n    return await axios.get(BASE_URL + `api/v1/events/participationEvent/${idEvent}`);\r\n}\r\n\r\nexport const deleteEvent = async (idEvent) =>{\r\n    return await axios.delete(BASE_URL + `api/v1/events/${idEvent}`);\r\n}","import axios from 'axios' ; \r\nimport { BASE_URL } from '../const';\r\n\r\nexport const getAllInstitutes = async ()=>{\r\n    return await axios.get(BASE_URL + '/api/v1/institutes') ;\r\n}","import axios from 'axios';\r\nimport { BASE_URL } from '../const';\r\n\r\nexport const getAllDomains = async() => {\r\n    return await axios.get(BASE_URL + 'api/v1/domains') ;\r\n}\r\n","import firebase from 'firebase';\r\nimport { firebaseConfig } from '../const';\r\n\r\nexport const uploadEventCover= async (file) => {\r\n    var blob = new Blob([file], { type: \"image/jpeg\" });\r\n    firebase.initializeApp(firebaseConfig);\r\n    const ref = firebase.storage().ref('/events/');\r\n    const name = (new Date().valueOf()) + '-' + file.name;\r\n    return await ref.child(name).put(blob);\r\n}","import React, { Component } from 'react';\r\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon, Upload, Calendar, Modal, Badge } from 'antd';\r\nimport moment from 'moment';\r\nimport { addEvent, getAllEvents, getEventById, updateEvent } from '../../../services/event.service';\r\nimport { getAllInstitutes } from '../../../services/institute.service';\r\nimport { getAllDomains } from '../../../services/domain.service';\r\nimport { uploadEventCover } from '../../../services/firebase.service';\r\nimport './add-event.scss';\r\nimport { checkChangedValues } from '../../../const';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction hasErrors(fieldsError) {\r\n    console.log(fieldsError);\r\n    console.log(\"Error=>\", Object.keys(fieldsError).some(field => fieldsError[field]));\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass AddEvent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Add Event props :\", props);\r\n        this.state = {\r\n            visible: false,\r\n            clubId: localStorage.getItem('clubId'),\r\n            listInstitutes: [],\r\n            eventsInSameDate: [],\r\n            isUpdate: (this.props.isUpdate && this.props.isUpdate === 'true') ? true : false,\r\n            listEvents: [],\r\n            listDomains: [],\r\n            selectedEvent: {},\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        if (this.props.isUpdate) {\r\n            getEventById(this.props.eventId)\r\n                .then(data => {\r\n                    this.setState({\r\n                        selectedEvent: data.data\r\n                    })\r\n                    console.log(\"Update component for event \", this.state.selectedEvent);\r\n                    this.props.form.setFieldsValue({\r\n                        name: data.data.name,\r\n                        dateTime: [moment(data.data.beginDate), moment(data.data.endDate)],\r\n                        price: data.data.price,\r\n                        description: data.data.description,\r\n                        location: data.data.location,\r\n                        domain: data.data.domain.id,\r\n                        institute: data.data.institute.id,\r\n                        NumberParticipation: data.data.numberParticipation\r\n                    })\r\n                }).catch(err => {\r\n                    console.log('Error', err);\r\n                });\r\n        }\r\n        getAllInstitutes().then(data => {\r\n            this.setState({ listInstitutes: data.data })\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n        getAllDomains().then(data => {\r\n\r\n            this.setState({\r\n                listDomains: data.data\r\n            })\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        getAllEvents().then(data => {\r\n            console.log('List Events => ', data);\r\n            this.setState({ listEvents: data.data });\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    normFile = e => {\r\n        console.log('Upload event:', e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    onAddEvent = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.isUpdate) {\r\n            console.log(\"Gonna Update and see changes \");\r\n            this.props.form.validateFields((errors, values) => {\r\n                if (true) {\r\n                    const updateValues = {\r\n                        name: values.name,\r\n                        beginDate: moment(values.dateTime[0]).toISOString(),\r\n                        endDate: moment(values.dateTime[1]).toISOString(),\r\n                        price: values.price,\r\n                        description: values.description,\r\n                        location: values.location,\r\n                        domain: values.domain,\r\n                        institute: values.institute,\r\n                    }\r\n                    console.log(values);\r\n                    delete updateValues.club;\r\n                    delete updateValues.creationDate;\r\n                    delete updateValues.photo;\r\n\r\n                    const oldValues = Object.assign({}, this.state.selectedEvent);\r\n                    oldValues.institute = oldValues.institute.id;\r\n                    oldValues.domain = oldValues.domain.id;\r\n                    delete oldValues.club;\r\n                    delete oldValues.id;\r\n                    delete oldValues.numberParticipation;\r\n                    delete oldValues.creationDate;\r\n                    delete oldValues.photo;\r\n\r\n                    console.log(\"Changed Values : \", checkChangedValues(oldValues, updateValues));\r\n                    values.photo = this.state.selectedEvent.photo;\r\n                    updateEvent(values, this.props.eventId)\r\n                        .then(data => {\r\n                            console.log(data);\r\n                            this.setState({\r\n                                visible: false,\r\n                                isLoading: false,\r\n                            });\r\n                            setTimeout(()=>{\r\n                                window.location.reload();\r\n                            },300) ; \r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        })\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            console.log(\"Adding event\");\r\n            this.props.form.validateFields((errors, values) => {\r\n                if (!errors) {\r\n                    uploadEventCover(values.upload[0].originFileObj)\r\n                        .then(snapshot => snapshot.ref.getDownloadURL())\r\n                        .then((url) => {\r\n                            values.photo = url;\r\n                            addEvent(values, this.state.clubId).then(data => {\r\n                                console.log(data);\r\n                                console.log('Added successfully');\r\n                                this.setState({\r\n                                    visible: false,\r\n                                    isLoading: false,\r\n                                });\r\n                                setTimeout(()=>{\r\n                                    window.location.reload();\r\n                                },300) ;\r\n                            }).catch(err => {\r\n                                console.log(err);\r\n                            });\r\n                        }).catch(err => {\r\n                            console.log(err);\r\n                        })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    checkEventsSameDate() {\r\n        console.log(\"Check events in the same date\");\r\n        this.props.form.validateFields((errors, values) => {\r\n            console.log(\"Selected date :\", moment(values.dateTime[0]).toISOString());\r\n            let eventsInSameDate = this.state.listEvents.filter(element => {\r\n                return moment(element.beginDate).format('DD/MM/YYYY') === moment(values.dateTime[0]).format('DD/MM/YYYY')\r\n            });\r\n            this.setState({ eventsInSameDate: eventsInSameDate });\r\n        })\r\n    }\r\n\r\n    dateCellRender(listEvents, value) {\r\n        const listData = listEvents.filter(element => {\r\n            return moment(element.beginDate).format('DD/MM/YYYY') === moment(value).format('DD/MM/YYYY')\r\n        });\r\n        console.log(\"Data cell rendrer\", value);\r\n        console.log(listData.length);\r\n        return (\r\n            <ul className=\"events\">\r\n                {listData.map(item => (\r\n                    <li key={item.id}>\r\n                        <Badge status=\"warning\" text={item.name} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    openCalendar() {\r\n        Modal.confirm({\r\n            icon: '',\r\n            title: 'Event Calendar Briefing',\r\n            width: '70vw',\r\n            content: (\r\n                <div>\r\n                    <Calendar fullscreen={false} mode=\"month\" dateCellRender={(value) => { return this.dateCellRender(this.state.listEvents, value) }} />\r\n                </div>\r\n            ),\r\n            onOk() {\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Button style={{ float: 'right', right: '5.5%' }} className=\"btn-secondary-solid\" onClick={this.showDrawer}>\r\n                    {(this.state.isUpdate)\r\n                        ? <div><Icon type=\"edit\" /> Update Event</div>\r\n                        :\r\n                        <div><Icon type=\"plus\" /> New Event</div>\r\n                    }\r\n                </Button>\r\n                <Drawer\r\n                    title=\"Create a new event\"\r\n                    width={720}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{ paddingBottom: 80 }}\r\n                >\r\n                    <Form layout=\"vertical\" hideRequiredMark onSubmit={this.onAddEvent}>\r\n                        <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('name') && getFieldError('name')) ? 'error' : ''} help={(isFieldTouched('name') && getFieldError('name')) || ''} label=\"Name\">\r\n                                    {getFieldDecorator('name', {\r\n                                        rules: [{ required: true, whitespace: true, message: 'Please enter the event name' }],\r\n                                    }\r\n                                    )(<Input disabled={this.state.isLoading} placeholder=\"Event name\" />)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('dateTime') && getFieldError('dateTime')) ? 'error' : ''} help={(isFieldTouched('dateTime') && getFieldError('dateTime')) || ''} label={\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <span>Date</span>\r\n                                        <span style={{ color: '#ff4d4f', fontSize: 'smaller' }}>\r\n                                            <a onClick={() => { this.openCalendar() }}>\r\n                                                {this.state.eventsInSameDate.length} events in the same date\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                }>\r\n                                    {getFieldDecorator('dateTime', {\r\n                                        rules: [{ required: true, message: 'Please choose the dateTime' },\r\n                                        ],\r\n                                    })(\r\n                                        <DatePicker.RangePicker\r\n                                            disabled={this.state.isLoading}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                            }}\r\n                                            disabledDate={(d)=> !d  || d.isSameOrBefore(moment(new Date().toISOString(), 'YYYY-MM-DD')) }\r\n                                            showTime={{ format: 'HH:mm' }}\r\n                                            format=\"YYYY-MM-DD HH:mm\"\r\n                                            defaultValue={[moment(new Date().toISOString(), 'YYYY-MM-DD'), moment(new Date().toISOString(), 'YYYY-MM-DD')]}\r\n                                            getPopupContainer={trigger => trigger.parentNode}\r\n                                            onOk={() => { this.checkEventsSameDate() }}\r\n                                        />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('price') && getFieldError('price')) ? 'error' : ''} help={(isFieldTouched('price') && getFieldError('price')) || ''} label=\"Price\" style={{ width: '15vw' }}>\r\n                                    {getFieldDecorator('price', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true, whitespace: true,\r\n                                                message: 'Please enter event price'\r\n                                            },\r\n                                            {\r\n                                                pattern: /^\\d*[0-9]\\d*$/,\r\n                                                message: 'Number needs to be provided'\r\n                                            }\r\n                                        ],\r\n                                    })(<Input disabled={this.state.isLoading} min={0} placeholder=\"Price\" />)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('NumberParticipation') && getFieldError('NumberParticipation')) ? 'error' : ''} help={(isFieldTouched('NumberParticipation') && getFieldError('NumberParticipation')) || ''} label=\"Number of Participators\">\r\n                                    {getFieldDecorator('NumberParticipation', {\r\n                                        rules: [\r\n                                            {\r\n                                                pattern: /^\\d*[0-9]\\d*$/,\r\n                                                message: 'Number needs to be provided'\r\n                                            },\r\n                                            { required: true, whitespace: true, message: 'Please enter the number of participators' }],\r\n                                    })(\r\n                                        <Input disabled={this.state.isLoading} placeholder=\"Number of Participators\" />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('domain') && getFieldError('domain')) ? 'error' : ''} help={(isFieldTouched('domain') && getFieldError('domain')) || ''} label=\"Domain\">\r\n                                    {getFieldDecorator('domain', {\r\n                                        rules: [{ required: true, whitespace: true, message: 'Please enter the event Domain' }],\r\n                                    })(<Select disabled={this.state.isLoading} placeholder=\"Please enter the event Domain\">\r\n                                        {\r\n                                            this.state.listDomains.map(element => {\r\n                                                return (\r\n                                                    <Option value={element.id}>{element.name}</Option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('institute') && getFieldError('institute')) ? 'error' : ''} help={(isFieldTouched('institute') && getFieldError('institute')) || ''} label=\"Institute\">\r\n                                    {getFieldDecorator('institute', {\r\n                                        rules: [{ required: true, whitespace: true, message: 'Please select an Institute' }],\r\n                                    })(\r\n                                        <Select disabled={this.state.isLoading} placeholder=\"Institute\">\r\n                                            {this.state.listInstitutes.map(element => {\r\n                                                return (\r\n                                                    <Option value={element.id}>{element.name}</Option>\r\n                                                )\r\n                                            })}\r\n                                        </Select>,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('location') && getFieldError('location')) ? 'error' : ''} help={(isFieldTouched('location') && getFieldError('location')) || ''} label=\"Location\">\r\n                                    {getFieldDecorator('location', {\r\n                                        rules: [{ required: true, whitespace: true, message: 'Please select a location' }],\r\n                                    })(\r\n                                        <Input disabled={this.state.isLoading} placeholder=\"Location\" />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        {(!this.state.isUpdate) ? <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <Form.Item validateStatus={(isFieldTouched('upload') && getFieldError('upload')) ? 'error' : ''} help={(isFieldTouched('upload') && getFieldError('upload')) || ''} label=\"Upload picture\" >\r\n                                    {getFieldDecorator('upload', {\r\n                                        valuePropName: 'fileList',\r\n                                        getValueFromEvent: this.normFile,\r\n                                    })(\r\n                                        <Upload disabled={this.state.isLoading} name=\"logo\" listType=\"picture\">\r\n                                            <Button disabled={this.state.isLoading}>\r\n                                                <Icon type=\"upload\" /> Click to upload\r\n                                            </Button>\r\n                                        </Upload>,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row> : \"\"}\r\n                        <Row gutter={16}>\r\n                            <Col span={24}>\r\n                                <Form.Item validateStatus={(isFieldTouched('description') && getFieldError('description')) ? 'error' : ''} help={(isFieldTouched('description') && getFieldError('description')) || ''} label=\"Description\">\r\n                                    {getFieldDecorator('description', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: 'Please enter the event description !',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input.TextArea disabled={this.state.isLoading} rows={4} placeholder=\"Description ...\" />)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <div\r\n                            style={{\r\n                                position: 'absolute',\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                width: '100%',\r\n                                borderTop: '1px solid #e9e9e9',\r\n                                padding: '10px 16px',\r\n                                background: '#fff',\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                        </Button>\r\n                            <Button className=\"btn-secondary-solid\" htmlType=\"submit\" loading={this.state.isLoading} disabled={hasErrors(getFieldsError())}>\r\n                                Submit\r\n                        </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(AddEvent);","import React, { Component } from 'react';\r\nimport './../../assets/styles/main.scss';\r\nimport { Col, Row, Card, Skeleton, Input, Icon, Select, Divider, Empty } from 'antd';\r\nimport './../../services/event.service';\r\nimport placeholder from './../../assets/imgs/placeholder.png';\r\nimport './events.scss';\r\nimport { getAllEvents, getEventByClubId } from './../../services/event.service';\r\nimport AddEvent from './add-event';\r\nimport moment from 'moment';\r\nimport { getAllDomains } from '../../services/domain.service';\r\nimport { getAllInstitutes } from '../../services/institute.service';\r\nconst { Option } = Select;\r\nconst { Meta } = Card;\r\nconst { Search } = Input;\r\n\r\n\r\nexport default class Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listEventsInit: [],\r\n            listEventsSearch: [],\r\n            isLoading: true,\r\n            currentUser: JSON.parse(localStorage.getItem('CURRENT_USER')),\r\n            fetchType: props.fetchType,\r\n            domains: [],\r\n            institutes: []\r\n        };\r\n    }\r\n\r\n    createSkeleton = () => {\r\n        let row = []\r\n        for (let i = 0; i < 3; i++) {\r\n            let col = []\r\n            for (let j = 0; j < 3; j++) {\r\n                col.push(\r\n                    <Col span={8} key={i + j}>\r\n                        <Skeleton loading={this.state.isLoading} active >\r\n                            <Meta\r\n                                title=\"Loading\"\r\n                                description=\"Loading\"\r\n                            />\r\n                        </Skeleton>\r\n                    </Col>\r\n                )\r\n            }\r\n            row.push(<Row gutter={[8, 8]} key={i}>{col}</Row>)\r\n        }\r\n        return row;\r\n    }\r\n\r\n    createEventRows = (listEventsSearch) => {\r\n        let row = [];\r\n        let col = [];\r\n        let chunkedArray = [];\r\n        var chunk = 3;\r\n        for (let i = 0, j = listEventsSearch.length; i < j; i += chunk) {\r\n            chunkedArray = listEventsSearch.slice(i, i + chunk);\r\n            col = [];\r\n            chunkedArray.forEach(element => {\r\n                col.push(\r\n                    <Col span={8} key={element.id} style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <Card\r\n                            onClick={() => { this.props.history.push(`/events/event-details/${element.id}`) }}\r\n                            hoverable\r\n                            style={{ width: '85%', borderRadius: '20px' }}\r\n                            cover={<img alt=\"event-card\" src={element.photo} onError={(e) => { e.target.src = placeholder }} />}\r\n                        >\r\n                            <Meta title={\r\n                                <div className=\"event-details-card\">\r\n                                    <span className=\"event-title\">\r\n                                        {element.name}\r\n                                    </span>\r\n                                    <span className=\"event-price\">\r\n                                        {element.price} D.T.\r\n                                    </span>\r\n                                </div>\r\n                            } description={\r\n                                <div className=\"event-details-card\">\r\n                                    <span className=\"text-limit\">\r\n                                        {element.description}\r\n                                    </span>\r\n                                    <span className=\"event-date\">\r\n                                        Still {moment(element.beginDate).diff(Date.now(), \"days\")} days !\r\n                                    </span>\r\n                                </div>\r\n                            } />\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            })\r\n            row.push(<Row key={i} gutter={[8, 32]} type=\"flex\">{col}</Row>)\r\n        }\r\n        return row;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        switch (this.state.fetchType) {\r\n            case 'all':\r\n                this.getEvents();\r\n                break;\r\n            case 'club':\r\n                this.getClubEvents();\r\n                break;\r\n            default:\r\n                this.getEvents();\r\n                break;\r\n        }\r\n        getAllInstitutes().then(data => {\r\n            this.setState({\r\n                institutes: data.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n        getAllDomains().then(data => {\r\n            this.setState({\r\n                domains: data.data\r\n            });\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    getEvents() {\r\n        getAllEvents().then(data => {\r\n            console.log(data);\r\n            this.setState({ listEventsInit: data.data, listEventsSearch: data.data });\r\n            this.setState({ isLoading: false });\r\n        }).catch(err => {\r\n            this.setState({ isLoading: false });\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    getClubEvents() {\r\n        getEventByClubId(localStorage.getItem('clubId')).then(data => {\r\n            console.log(data);\r\n            this.setState({ listEventsInit: data.data, listEventsSearch: data.data });\r\n            this.setState({ isLoading: false });\r\n        }).catch(err => {\r\n            this.setState({ isLoading: false });\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    onSearchInput = (value) => {\r\n        console.log(value);\r\n        if (value.length == 0) {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listEventsInit } = this.state;\r\n            const listEventFiltred = listEventsInit.filter(element => {\r\n                return element.name.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n            });\r\n            console.log(listEventFiltred);\r\n            this.setState({\r\n                listEventsSearch: listEventFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    resetList = () => {\r\n        this.setState({ listEventsSearch: this.state.listEventsInit });\r\n    }\r\n\r\n    onChange(value) {\r\n        console.log(value);\r\n        if (value === \"all\") {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listEventsInit } = this.state;\r\n            const listEventFiltred = listEventsInit.filter(element => {\r\n                return element.domain.id === value;\r\n            });\r\n            console.log(listEventFiltred);\r\n            this.setState({\r\n                listEventsSearch: listEventFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeInst(value) {\r\n        console.log(value);\r\n        if (value === \"all\") {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listEventsInit } = this.state;\r\n            const listEventFiltred = listEventsInit.filter(element => {\r\n                return element.institute.id === value;\r\n            });\r\n            console.log(listEventFiltred);\r\n            this.setState({\r\n                listEventsSearch: listEventFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: '30px', width: '100%' }} className=\"website-layout-view-container events-list\">\r\n                <div>\r\n                    {(this.state.currentUser && this.state.currentUser.role === 'Club') ?\r\n                        < AddEvent />\r\n                        : \"\"\r\n                    }\r\n                </div>\r\n                <div className=\"search-section\">\r\n                    <div><Search\r\n                        placeholder=\"Search\"\r\n                        onSearch={value => this.onSearchInput(value)}\r\n                        style={{ width: 200 }}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 170 }}\r\n                            placeholder=\"Domaine\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={this.onChange.bind(this)}\r\n                            onFocus={onFocus}\r\n                            onBlur={onBlur}\r\n                            filterOption={(input, option) =>\r\n                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            <Option value=\"all\">All</Option>\r\n                            {this.state.domains.map(element => {\r\n                                return (\r\n                                    <Option value={element.id}>{element.name}</Option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"-55px\" }}>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            placeholder=\"Institute\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={this.onChangeInst.bind(this)}\r\n                            onFocus={onFocus}\r\n                            onBlur={onBlur}\r\n                            filterOption={(input, option) =>\r\n                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            <Option value=\"all\">All</Option>\r\n                            {this.state.institutes.map(element => {\r\n                                return (\r\n                                    <Option value={element.id}>{element.name}</Option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {/* <Button icon=\"search\">Search</Button> */}\r\n                    </div>\r\n\r\n                </div>\r\n                <Divider>Events</Divider>\r\n                <div>\r\n                    {(this.state.listEventsSearch && this.state.listEventsSearch.length > 0 && !this.state.isLoading) ?\r\n                        this.createEventRows(this.state.listEventsSearch)\r\n                        : (!this.state.isLoading && this.state.listEventsSearch.length === 0)\r\n                            ? <Empty />\r\n                            : \"\"\r\n\r\n                    }\r\n                    {(this.state.isLoading) &&\r\n                        this.createSkeleton()\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction onChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\n\r\nfunction onBlur() {\r\n    console.log('blur');\r\n}\r\n\r\nfunction onFocus() {\r\n    console.log('focus');\r\n}\r\n\r\nfunction onSearch(val) {\r\n    console.log('search:', val);\r\n}","import axios from \"axios\";\r\nimport { BASE_URL } from \"../const\";\r\n\r\nexport const getAllClubs = async () => {\r\n    return await axios.get(BASE_URL + '/api/v1/clubs');\r\n}\r\nexport const getClubById = async (id) => {\r\n    return await axios.get(BASE_URL + 'api/v1/clubs/' + id);\r\n}\r\nexport const getClubByUserId = (id)=>{\r\n    return axios.get(BASE_URL + `api/v1/clubs/user/${id}`) ;\r\n}\r\n","import React, { Component } from 'react';\r\nimport './../../assets/styles/main.scss';\r\nimport { Col, Row, Card, Skeleton, Input, Icon, Select, Divider } from 'antd';\r\nimport './../../services/club.service';\r\nimport placeholder from './../../assets/imgs/placeholder.png';\r\nimport './clubs.scss';\r\nimport { getAllClubs } from './../../services/club.service';\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default class Clubs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listClubsInit: [],\r\n            listClubsSearch: [],\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    createSkeleton = () => {\r\n        let row = []\r\n        for (let i = 0; i < 3; i++) {\r\n            let col = []\r\n            for (let j = 0; j < 3; j++) {\r\n                col.push(\r\n                    <Col span={8} key={i + j}>\r\n                        <Skeleton loading={this.state.isLoading} active >\r\n                            <Meta\r\n                                title=\"Loading\"\r\n                                description=\"Loading\"\r\n                            />\r\n                        </Skeleton>\r\n                    </Col>\r\n                )\r\n            }\r\n            row.push(<Row gutter={[8, 8]} key={i}>{col}</Row>)\r\n        }\r\n        return row;\r\n    }\r\n\r\n    createClubRows = (listClubsSearch) => {\r\n        let row = [];\r\n        let col = [];\r\n        let chunkedArray = [];\r\n        var chunk = 3;\r\n        for (let i = 0, j = listClubsSearch.length; i < j; i += chunk) {\r\n            chunkedArray = listClubsSearch.slice(i, i + chunk);\r\n            col = [];\r\n            chunkedArray.forEach(element => {\r\n                col.push(\r\n                    <Col span={8} key={element.id} style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <Card\r\n                            onClick={() => { this.props.history.push(`/clubs/club-details/${element.id}`) }}\r\n                            hoverable\r\n                            style={{ width: '25vw', borderRadius: '20px' }}\r\n                            cover={<img alt=\"club-card\" src={element.photo} onError={(e) => { e.target.src = placeholder }} />}\r\n                        >\r\n                            <Meta title={element.name} className=\"text-limit\" description={element.description} />\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            })\r\n            row.push(<Row key={i} gutter={[8, 32]} type=\"flex\">{col}</Row>)\r\n        }\r\n        return row;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        getAllClubs().then(data => {\r\n            this.setState({ listClubsInit: data.data, listClubsSearch: data.data });\r\n            this.setState({ isLoading: false });\r\n        }).catch(err => {\r\n            this.setState({ isLoading: false });\r\n            console.log(err);\r\n        })\r\n    }\r\n    onSearchInput = (value) => {\r\n        console.log(value);\r\n        if (value.length == 0) {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listClubsInit } = this.state;\r\n            const listClubFiltred = listClubsInit.filter(element => {\r\n                return element.name.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n            });\r\n            console.log(listClubFiltred);\r\n            this.setState({\r\n                listClubsSearch: listClubFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    resetList = () => {\r\n        this.setState({ listClubsSearch: this.state.listClubsInit });\r\n    }\r\n\r\n\r\n    onChange(value) {\r\n        console.log(value);\r\n        if (value === \"--\") {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listClubsInit } = this.state;\r\n            const listClubFiltred = listClubsInit.filter(element => {\r\n                return element.domain.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n            });\r\n            console.log(listClubFiltred);\r\n            this.setState({\r\n                listClubsSearch: listClubFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: '30px', width: '100%' }} className=\"website-layout-view-container clubs-list\">\r\n                <Divider>Clubs</Divider>\r\n                <div>\r\n                    {(this.state.listClubsSearch && this.state.listClubsSearch.length > 0 && !this.state.isLoading) ?\r\n                        this.createClubRows(this.state.listClubsSearch)\r\n                        : (!this.state.isLoading && this.state.listClubsSearch.length === 0)\r\n                            ? <div className=\"center-div\">\r\n                                <Icon className=\"error-icon\" type=\"frown\" />\r\n                                No Clubs\r\n                            </div>\r\n                            : \"\"\r\n\r\n                    }\r\n                    {(this.state.isLoading) &&\r\n                        this.createSkeleton()\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../const\";\r\n\r\nexport const getAllSponsors = async () => {\r\n    return await axios.get(BASE_URL + '/api/v1/Sponsor');\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../../assets/styles/main.scss';\r\nimport { Col, Row, Card, Skeleton, Input, Icon, Select, Divider } from 'antd';\r\nimport './../../services/sponsor.service';\r\nimport placeholder from './../../assets/imgs/placeholder.png';\r\nimport './sponsor.scss';\r\nimport { getAllSponsors } from './../../services/sponsor.service';\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nexport default class Sponsors extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listSponsorsInit: [],\r\n            listSponsorsSearch: [],\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    createSkeleton = () => {\r\n        let row = []\r\n        for (let i = 0; i < 3; i++) {\r\n            let col = []\r\n            for (let j = 0; j < 3; j++) {\r\n                col.push(\r\n                    <Col span={8} key={i + j}>\r\n                        <Skeleton loading={this.state.isLoading} active >\r\n                            <Meta\r\n                                title=\"Loading\"\r\n                                description=\"Loading\"\r\n                            />\r\n                        </Skeleton>\r\n                    </Col>\r\n                )\r\n            }\r\n            row.push(<Row gutter={[8, 8]} key={i}>{col}</Row>)\r\n        }\r\n        return row;\r\n    }\r\n\r\n    createSponsorRows = (listSponsorsSearch) => {\r\n        let row = [];\r\n        let col = [];\r\n        let chunkedArray = [];\r\n        var chunk = 3;\r\n        for (let i = 0, j = listSponsorsSearch.length; i < j; i += chunk) {\r\n            chunkedArray = listSponsorsSearch.slice(i, i + chunk);\r\n            col = [];\r\n            chunkedArray.forEach(element => {\r\n                col.push(\r\n                    <Col span={8} key={element.id} style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <Card\r\n                            onClick={() => { this.props.history.push(`/sponsors/sponsor-details/${element.id}`) }}\r\n                            hoverable\r\n                            style={{ width: '25vw', borderRadius: '20px' }}\r\n                            cover={<img alt=\"sponsor-card\" src={element.photo} onError={(e) => { e.target.src = placeholder }} />}\r\n                        >\r\n                            <Meta title={element.name} className=\"text-limit\" description={element.description} />\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            })\r\n            row.push(<Row key={i} gutter={[8, 32]} type=\"flex\">{col}</Row>)\r\n        }\r\n        return row;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        getAllSponsors().then(data => {\r\n            console.log(data.data);\r\n            this.setState({ listSponsorsInit: data.data, listSponsorsSearch: data.data });\r\n            this.setState({ isLoading: false });\r\n        }).catch(err => {\r\n            this.setState({ isLoading: false });\r\n            console.log(err);\r\n        })\r\n    }\r\n    onSearchInput = (value) => {\r\n        console.log(value);\r\n        if (value.length == 0) {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listSponsorsInit } = this.state;\r\n            const listSponsorFiltred = listSponsorsInit.filter(element => {\r\n                return element.name.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n            });\r\n            console.log(listSponsorFiltred);\r\n            this.setState({\r\n                listSponsorsSearch: listSponsorFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    resetList = () => {\r\n        this.setState({ listSponsorsSearch: this.state.listSponsorsInit });\r\n    }\r\n\r\n\r\n    onChange(value) {\r\n        console.log(value);\r\n        if (value === \"--\") {\r\n            console.log(\"Reset List\");\r\n            this.resetList();\r\n        } else {\r\n            const { listSponsorsInit } = this.state;\r\n            const listSponsorFiltred = listSponsorsInit.filter(element => {\r\n                return element.domain.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n            });\r\n            console.log(listSponsorFiltred);\r\n            this.setState({\r\n                listSponsorsSearch: listSponsorFiltred\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: '30px', width: '100%' }} className=\"website-layout-view-container sponsors-list\">\r\n\r\n\r\n\r\n\r\n                <Divider>Sponsors</Divider>\r\n                <div>\r\n                    {(this.state.listSponsorsSearch && this.state.listSponsorsSearch.length > 0 && !this.state.isLoading) ?\r\n                        this.createSponsorRows(this.state.listSponsorsSearch)\r\n                        : (!this.state.isLoading && this.state.listSponsorsSearch.length === 0)\r\n                            ? <div className=\"center-div\">\r\n                                <Icon className=\"error-icon\" type=\"frown\" />\r\n                                No Sponsors\r\n                            </div>\r\n                            : \"\"\r\n\r\n                    }\r\n                    {(this.state.isLoading) &&\r\n                        this.createSkeleton()\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Modal, Form, Input, Button } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default class NewEmailModal extends Component {\r\n\r\n    render() {\r\n        const { visible, onSend, onCancel, receiverEmailAddress, form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n\r\n        return(\r\n            <Modal \r\n                visible={visible} \r\n                footer={null} \r\n                closable={false}\r\n            >\r\n                <Form layout=\"vertical\">\r\n                    <Form.Item>\r\n                        {\r\n                            getFieldDecorator(\r\n                                'Receiver',\r\n                                {\r\n                                    initialValue: receiverEmailAddress,\r\n                                    rules: [\r\n                                        { required: true, message: 'This field is required' },\r\n                                        { type: 'email', message: 'Invalid email address' }\r\n                                    ]\r\n                                }\r\n                            )(\r\n                                <Input placeholder=\"Receiver email address\" disabled={ (receiverEmailAddress) ? true : false } />,\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {\r\n                            getFieldDecorator(\r\n                                'Subject',\r\n                                {\r\n                                    rules: [\r\n                                        { required: true, message: 'This field is required' }\r\n                                    ]\r\n                                }\r\n                            )(\r\n                                <Input placeholder=\"Subject\" />,\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {\r\n                            getFieldDecorator(\r\n                                'Content',\r\n                                {\r\n                                    rules: [\r\n                                        { required: true, message: 'This field is required' }\r\n                                    ]\r\n                                }\r\n                            )(\r\n                                <TextArea placeholder=\"Content\" rows={12} />,\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <div className=\"modal-actions-container\">\r\n                        <Button className=\"btn-secondary-outlined\" onClick={onCancel}>Cancel</Button>\r\n                        <Button className=\"btn-secondary-solid\" onClick={onSend}>Send</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n","import { Form } from 'antd';\r\n\r\nimport NewEmailModal from './new-email-modal';\r\n\r\nexport default Form.create()(NewEmailModal);\r\n","import React, { Component } from 'react';\r\n\r\nimport { Button, Radio, Empty } from 'antd';\r\n\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport NewEmailModal from './new-email-modal';\r\n\r\nimport './emails.scss';\r\n\r\n\r\nexport default class Emails extends Component {\r\n\r\n    emailsType = 'RECEIVED_EMAILS';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emails: [],\r\n            selectedEmail: null,\r\n            newEmailModalVisibility: false\r\n        };\r\n    }\r\n\r\n    loadEmails() {\r\n        let url = 'https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/users/mails/';\r\n        if (this.emailsType === 'RECEIVED_EMAILS') {\r\n            url = url + 'receiver';\r\n        } else if (this.emailsType === 'SENT_EMAILS') {\r\n            url = url + 'sender';\r\n        } else {\r\n            return;\r\n        }\r\n        axios.get(url + '/' + JSON.parse(localStorage.getItem('CURRENT_USER')).id).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    emails: response.data\r\n                })\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadEmails();\r\n    }\r\n\r\n    onEmailsSelectorChange = (event) => {\r\n        this.setState({\r\n            selectedEmail: null\r\n        });\r\n        this.emailsType = event.target.value;\r\n        this.loadEmails();\r\n    }\r\n\r\n    onEmailSelection = (email) => {\r\n        this.setState({\r\n            selectedEmail: (this.state.selectedEmail && email.id === this.state.selectedEmail.id) ? null : { ...email }\r\n        })\r\n    }\r\n\r\n    showNewEmailModal = () => {\r\n        this.setState({\r\n            newEmailModalVisibility: true\r\n        });\r\n    }\r\n\r\n    hideNewEmailModal = () => {\r\n        this.setState({\r\n            newEmailModalVisibility: false\r\n        });\r\n        this.formRef.props.form.resetFields();\r\n    }\r\n\r\n    saveFormRef = (formRef) => {\r\n        this.formRef = formRef;\r\n    };\r\n\r\n    sendEmail = () => {\r\n        const { form } = this.formRef.props;\r\n        form.validateFields((errors, values) => {\r\n            if (!errors) {\r\n                values['Sender'] = JSON.parse(localStorage.getItem('CURRENT_USER')).email;\r\n                console.log(values);\r\n                axios.post('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/users/mails', values).then(\r\n                    (response) => {\r\n                        this.loadEmails();\r\n                        this.hideNewEmailModal();\r\n                        console.log(response);\r\n                    }\r\n                ).catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const emails = this.state.emails;\r\n        const selectedEmail = this.state.selectedEmail;\r\n        const newEmailModalVisibility = this.state.newEmailModalVisibility;\r\n\r\n        return (\r\n            <div className=\"website-layout-content-wrapper\">\r\n                <div className=\"website-layout-view-container\">\r\n                    <div className=\"emails-selector-container\">\r\n                        <Radio.Group defaultValue=\"RECEIVED_EMAILS\" buttonStyle=\"solid\" onChange={this.onEmailsSelectorChange}>\r\n                            <Radio.Button value=\"RECEIVED_EMAILS\">Received emails</Radio.Button>\r\n                            <Radio.Button value=\"SENT_EMAILS\">Sent emails</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className=\"card card-elevated emails-card\">\r\n                        <div className=\"emails-list-container\">\r\n                            {\r\n                                (!emails || emails.length <= 0) && \r\n                                <Empty description=\"No emails...\" />\r\n                            }\r\n                            {\r\n                                emails.sort((a, b) => moment(a.sendDate, 'YYYY-MM-DD HH:mm:ss').isSameOrBefore(b.sendDate, 'YYYY-MM-DD HH:mm:ss') ? 1 : -1).map(\r\n                                    (email, index) => {\r\n                                        return (\r\n                                            <div key={email.id} className={(selectedEmail && selectedEmail.id === email.id) ? \"email-item-container selected-email\" : \"email-item-container\"} onClick={() => this.onEmailSelection(email)}>\r\n                                                <div className={(index % 2 === 0) ? \"email-item even\" : \"email-item odd\"}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"subject\">\r\n                                                            <h4>{email.subject}</h4>\r\n                                                        </div>\r\n                                                        <div className=\"sent-date\">{moment(email.sendDate, 'YYYY-MM-DD HH:mm:ss').format('D MMM, YYYY - HH:mm')}</div>\r\n                                                    </div>\r\n                                                    <div className=\"name\">{ (this.emailsType === 'RECEIVED_EMAILS') ? email.sender.firstName + ' ' + email.sender.lastName : email.receiver.firstName + ' ' + email.receiver.lastName }</div>\r\n                                                    <div className=\"content-excerpt\">{email.content.substring(0, 60)}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"email-details-container\" style={{flex: selectedEmail ? 1 : 0}}>\r\n                            <div className=\"email-details\">\r\n                                <h3 className=\"subject\">{selectedEmail && selectedEmail.subject}</h3>\r\n                                <div className=\"row\">\r\n                                    <div className=\"sender\">{selectedEmail && ((this.emailsType === 'RECEIVED_EMAILS') ? 'From ' + selectedEmail.sender.firstName : 'To ' + selectedEmail.receiver.firstName)}</div>\r\n                                    <div className=\"sent-date\">{selectedEmail && moment(selectedEmail.sendDate, 'YYYY-MM-DD HH:mm:ss').format('D MMM, YYYY - HH:mm')}</div>\r\n                                </div>\r\n                                <div className=\"content\">{selectedEmail && selectedEmail.content}</div>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            (this.emailsType === 'SENT_EMAILS') &&\r\n                            <Button className=\"btn-secondary-solid btn-circle btn-fab\" shape=\"circle\" icon=\"plus\" onClick={this.showNewEmailModal} />\r\n                        }\r\n                    </div>\r\n                    <NewEmailModal \r\n                        wrappedComponentRef={this.saveFormRef} \r\n                        visible={newEmailModalVisibility} \r\n                        onSend={this.sendEmail} \r\n                        onCancel={this.hideNewEmailModal}\r\n                    ></NewEmailModal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './edit-profile.scss';\r\n\r\n\r\nexport default class EditProfile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"website-layout-content-wrapper\">\r\n                <div className=\"website-layout-view-container\">\r\n                    <h1>Edit profile</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import { Form } from 'antd';\r\n\r\nimport EditProfile from './edit-profile';\r\n\r\nexport default Form.create()(EditProfile);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { getEventById, studentCancelParticipation, addStudentParticipation, getListParticipators, deleteEvent } from '../../../services/event.service';\r\nimport './../../../assets/styles/main.scss';\r\nimport './event-details.scss';\r\nimport moment from 'moment';\r\nimport placeholder from './../../../assets/imgs/placeholder.png';\r\nimport { Button, Icon, Divider, Skeleton, Modal, notification, List, Avatar } from 'antd';\r\nimport './../../../services/event.service';\r\nimport AddEvent from './../add-event';\r\n\r\nexport default class EventDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedEvent: {},\r\n            isLoading: true,\r\n            currentUser: JSON.parse(localStorage.getItem('CURRENT_USER')),\r\n            eventParticipators: [],\r\n            clubId: localStorage.getItem('clubId')\r\n        };\r\n    }\r\n\r\n    getAllParticipators() {\r\n        getListParticipators(this.props.match.params.id)\r\n            .then(data => {\r\n                console.log(data.data);\r\n                this.setState({ eventParticipators: data.data })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"Details\");\r\n        const eventId = this.props.match.params.id;\r\n        this.getAllParticipators();\r\n        getEventById(eventId).then(data => {\r\n            console.log(data.data);\r\n            this.setState({ selectedEvent: data.data });\r\n            this.setState({ isLoading: false });\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ isLoading: false });\r\n        })\r\n    }\r\n\r\n    getEventByIdRefresh() {\r\n        const eventId = this.props.match.params.id;\r\n        this.getAllParticipators();\r\n        getEventById(eventId).then(data => {\r\n            this.setState({ selectedEvent: data.data });\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    openSuccessNotification = (message) => {\r\n        notification.success({\r\n            message: 'Done',\r\n            description: message,\r\n            style: {\r\n                width: 250,\r\n                marginLeft: 335 - 250,\r\n            },\r\n        });\r\n    };\r\n\r\n    openErrorNotification = (message) => {\r\n        notification.warn({\r\n            message: 'Done',\r\n            description: message,\r\n            style: {\r\n                width: 250,\r\n                marginLeft: 335 - 250,\r\n            },\r\n        });\r\n    };\r\n\r\n    cancelStudentParticipation() {\r\n        studentCancelParticipation(this.props.match.params.id, localStorage.getItem('studentId'))\r\n            .then(data => {\r\n                this.openErrorNotification('Your participation has been cancelled !');\r\n                this.getEventByIdRefresh();\r\n                console.log(data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n    addStdntParticipation() {\r\n        addStudentParticipation(this.props.match.params.id, localStorage.getItem('studentId'))\r\n            .then(data => {\r\n                this.getEventByIdRefresh();\r\n                console.log(data);\r\n                this.openSuccessNotification('Your participation has been saved !');\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    showListPartModal = () => {\r\n        Modal.info({\r\n            title: 'List Participators',\r\n            content: (\r\n                <div>\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.eventParticipators}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title={<a href=\"https://ant.design\">{item.user.user.firstName + ' ' + item.user.user.lastName}</a>}\r\n                                    description={`Participated at ${item.dateParticipate}`}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n            ),\r\n            onOk() { },\r\n\r\n        })\r\n    }\r\n\r\n    showDeleteConfirm() {\r\n        Modal.confirm({\r\n            title: 'Confirm Action',\r\n            content: 'Are you sure delete this task?',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk: () => {\r\n                deleteEvent(this.props.match.params.id)\r\n                    .then(data => {\r\n                        this.openSuccessNotification('The event has been deleted successfully !');\r\n                        this.props.history.push('/events/club');\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        this.props.history.push('/events/club');\r\n                    })\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {(!this.state.isLoading) ?\r\n                <div style={{ padding: '30px', width: '100%' }} className=\"website-layout-view-container\">\r\n                    {(this.state.currentUser && this.state.currentUser.role === 'Club' && this.state.clubId === this.state.selectedEvent.club.id) ? \r\n                    <AddEvent isUpdate=\"true\" eventId={this.props.match.params.id} />\r\n                    :''}\r\n                    <div className=\"event-details\">\r\n                        <div>\r\n                            <h2>{this.state.selectedEvent.name}</h2>\r\n                        </div>\r\n                        <div>\r\n                            <img alt=\"event-card\" className=\"event-image\" src={this.state.selectedEvent.photo} onError={(e) => { e.target.src = placeholder }} />\r\n                        </div>\r\n                        <div className=\"description-section\">\r\n                            <div className=\"description\">\r\n                                <Divider orientation=\"left\">Description</Divider>\r\n                                <p>\r\n                                    {this.state.selectedEvent.description}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"right-section-bottom\">\r\n                                <h4 className=\"detail-item\">\r\n                                    {\r\n                                        (this.state.selectedEvent) &&\r\n                                        <Link to={ '/clubs/club-details/' + this.state.selectedEvent.club.id }>\r\n                                            <Icon type=\"team\" className=\"icon\" /> { this.state.selectedEvent.club.name }\r\n                                        </Link>\r\n                                    }\r\n                                </h4>\r\n                                <h4 className=\"detail-item\" >\r\n                                    <Icon type=\"info-circle\" className=\"icon\" />\r\n                                    Places available: {this.state.selectedEvent.numberParticipation}\r\n                                </h4>\r\n                                <h4 className=\"detail-item\" >\r\n                                    <Icon type=\"environment\" className=\"icon\" />\r\n                                    {this.state.selectedEvent.institute.name}\r\n                                </h4>\r\n                                <h4 className=\"detail-item\">\r\n                                    <Icon type=\"calendar\" className=\"icon\" />\r\n                                    {moment(this.state.selectedEvent.beginDate).format('DD/MM/YYYY HH:mm')} - {moment(this.state.selectedEvent.endDate).format('DD/MM/YYYY HH:mm')}\r\n                                </h4>\r\n                                <h4 className=\"detail-item\">\r\n                                    <Icon type=\"dollar\" className=\"icon\" />\r\n                                    {this.state.selectedEvent.price} D.T.\r\n                                </h4>\r\n                                <h4 className=\"detail-item\">\r\n                                    <Icon type=\"tag\" className=\"icon\" />\r\n                                    {this.state.selectedEvent.domain.name}\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-section\">\r\n                        {\r\n                            (this.state.currentUser && this.state.currentUser.role === 'Student') ?\r\n                                (!this.state.eventParticipators || this.state.eventParticipators.map(element => { return element.user.user.id }).indexOf(this.state.currentUser.id) == -1) ?\r\n                                    <Button className=\"btn-secondary-solid\" onClick={() => { this.addStdntParticipation() }}>Participate</Button>\r\n                                    :\r\n                                    <Button type=\"danger\" onClick={() => { this.cancelStudentParticipation() }}>Cancel participation</Button>\r\n                                : \"\"\r\n                        }\r\n                        {\r\n                            (this.state.currentUser && this.state.currentUser.role === 'Club' && this.state.clubId === this.state.selectedEvent.club.id) ?\r\n                                <>\r\n                                    <Button className=\"btn-secondary-solid\" onClick={this.showListPartModal}>List Participators</Button>\r\n                                    <Button style={{ height: '30px', lineHeight: 0 }} className=\"nb-participant\" type=\"danger\" onClick={() => { this.showDeleteConfirm() }}>Delete</Button>\r\n                                </>\r\n                                : \"\"\r\n                        }\r\n                        <span className=\"nb-participant\">\r\n                            {(this.state.eventParticipators) ? this.state.eventParticipators.length : '0'} participated\r\n                    </span>\r\n                    </div>\r\n\r\n                </div>\r\n                :\r\n                <div style={{ padding: '30px', width: '100%' }} className=\"website-layout-view-container\">\r\n                    <Skeleton loading={this.state.isLoading} active >\r\n                    </Skeleton>\r\n                    <Skeleton loading={this.state.isLoading} active >\r\n                    </Skeleton>\r\n                    <Skeleton loading={this.state.isLoading} active >\r\n                    </Skeleton>\r\n                </div>}\r\n                </>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Dashboard from './dashboard';\r\nimport Events from '../events';\r\nimport Clubs from '../clubs';\r\nimport Sponsors from '../sponsors';\r\nimport Emails from '../emails';\r\nimport AddEvent from '../events/add-event/';\r\nimport EditProfile from '../edit-profile';\r\nimport EventDetails from '../events/event-details/event-details';\r\nimport { getClubByUserId } from '../../services/club.service';\r\n\r\n\r\nexport default class ClubView extends Component {\r\n\r\n    constructor(props){\r\n        super(props) ;\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        var currentUser = JSON.parse(localStorage.getItem('CURRENT_USER'));\r\n        getClubByUserId(currentUser.id).then(data=>{\r\n            localStorage.setItem('clubId', data.data.id);\r\n        }).catch(err=>{\r\n            console.log('Fetching Club Info error : ', err) ; \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path={`/`} component={Dashboard} />\r\n                <Route path={`/events/club`} component={(props) => <Events {...props} fetchType={'club'} />} />\r\n                <Route path={`/events/event-details/:id`} component={EventDetails}   />\r\n                <Route path={`/events/all`} component={(props) => <Events {...props} fetchType={'all'} />}  />\r\n                <Route path={`/clubs`} component={Clubs} />\r\n                <Route path={`/sponsors`} component={Sponsors} />\r\n                <Route path={`/emails`} component={Emails} />\r\n                <Route path={`/edit-profile`} component={EditProfile} />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Layout, Menu, Icon } from 'antd';\r\n\r\nimport HeaderUserInfo from '../header-user-info';\r\nimport ClubView from '../club-view';\r\n\r\nimport logoLight from '../../assets/imgs/logo-light.png';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst CLUB_MAIN_MENU_ITEMS = [\r\n    {\r\n        key: '/',\r\n        label: 'Dashboard',\r\n        icon: 'appstore',\r\n        link: '/'\r\n    },\r\n    {\r\n        key: '/events',\r\n        label: 'Events',\r\n        icon: 'calendar',\r\n        children: [\r\n            {\r\n                key: '/events/club',\r\n                label: 'Club events',\r\n                link: '/events/club'\r\n            },\r\n            {\r\n                key: '/events/all',\r\n                label: 'All events',\r\n                link: '/events/all'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        key: '/clubs',\r\n        label: 'Clubs',\r\n        icon: 'deployment-unit',\r\n        link: '/clubs'\r\n    },\r\n    {\r\n        key: '/sponsors',\r\n        label: 'Sponsors',\r\n        icon: 'user',\r\n        link: '/sponsors'\r\n    },\r\n    {\r\n        key: '/emails',\r\n        label: 'Emails',\r\n        icon: 'inbox',\r\n        link: '/emails'\r\n    }\r\n];\r\n\r\n\r\nexport default class BackofficeLayout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSiderCollapsed: false\r\n        };\r\n    }\r\n\r\n\r\n    toggleSider = () => {\r\n        this.setState({ isSiderCollapsed: !this.state.isSiderCollapsed });\r\n    };\r\n\r\n    render() {\r\n        let userView;\r\n        let mainMenuItems;\r\n        if (this.props.currentUser && this.props.currentUser.role === 'Club') {\r\n            userView = <ClubView />;\r\n            mainMenuItems = CLUB_MAIN_MENU_ITEMS.slice(0);\r\n        }\r\n        const mainMenu = (\r\n            <Menu\r\n                mode=\"inline\"\r\n                theme=\"light\"\r\n                selectedKeys={[this.props.location.pathname]}\r\n                style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n                {\r\n                    mainMenuItems.map(\r\n                        (item) => {\r\n                            if (item.children && item.children.length > 0) {\r\n                                return (\r\n                                    <SubMenu\r\n                                        key={item.key}\r\n                                        title={\r\n                                            <span>\r\n                                                <Icon type={item.icon} />\r\n                                                {item.label}\r\n                                            </span>\r\n                                        }\r\n                                    >\r\n                                        {\r\n                                            item.children.map(\r\n                                                (child) => {\r\n                                                    return (\r\n                                                        <Menu.Item key={child.key}>\r\n                                                            <span>{child.label}</span>\r\n                                                            <Link to={child.link}></Link>\r\n                                                        </Menu.Item>\r\n                                                    );\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </SubMenu>\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <Menu.Item key={item.key}>\r\n                                        <Icon type={item.icon} />\r\n                                        <span>{item.label}</span>\r\n                                        <Link to={item.link}></Link>\r\n                                    </Menu.Item>\r\n                                );\r\n                            }\r\n                        }\r\n                    )\r\n                }\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Header className=\"backoffice-layout-header\">\r\n                    <div className=\"header-item\">\r\n                        <Icon\r\n                            className=\"sider-toggle-btn\"\r\n                            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                            onClick={this.toggleSider}\r\n                        />\r\n                    </div>\r\n                    <div className=\"header-item clickable\">\r\n                        <Link to=\"/\">\r\n                            <img src={logoLight} alt=\"Cluby\" className=\"logo\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"space-filler\"></div>\r\n                    <div className=\"header-item clickable\">\r\n                        <HeaderUserInfo currentUser={this.props.currentUser} />\r\n                    </div>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider\r\n                        width={240}\r\n                        collapsedWidth={0}\r\n                        theme=\"light\"\r\n                        trigger={null}\r\n                        collapsible\r\n                        collapsed={this.state.isSiderCollapsed}\r\n                        className=\"backoffice-layout-main-menu-sider\"\r\n                    >\r\n                        {mainMenu}\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Content className=\"backoffice-layout-content-container\">\r\n                            {userView}\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n}\r\n","import { withRouter } from 'react-router-dom';\r\n\r\nimport BackofficeLayout from './backoffice-layout';\r\n\r\nexport default withRouter(BackofficeLayout);\r\n","import React, { Component } from 'react';\r\n\r\nimport { Button } from 'antd';\r\n\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport NewEmailModal from './../../emails/new-email-modal';\r\n\r\nimport './club-details.scss';\r\n\r\n\r\nexport default class ClubDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            club: null,\r\n            newEmailModalVisibility: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const clubId = this.props.match.params.id;\r\n        axios.get('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/clubs/' + clubId).then(\r\n            (response) => {\r\n                const club = response.data;\r\n                axios.get('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/events/club/' + clubId).then(\r\n                    (response) => {\r\n                        club['eventsCount'] = response.data.length;\r\n                        console.log(club);\r\n                        this.setState({\r\n                            club: club\r\n                        });\r\n                    }\r\n                ).catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    showNewEmailModal = () => {\r\n        this.setState({\r\n            newEmailModalVisibility: true\r\n        });\r\n    }\r\n\r\n    hideNewEmailModal = () => {\r\n        this.setState({\r\n            newEmailModalVisibility: false\r\n        });\r\n        this.formRef.props.form.resetFields();\r\n    }\r\n\r\n    saveFormRef = (formRef) => {\r\n        this.formRef = formRef;\r\n    };\r\n\r\n    sendEmail = () => {\r\n        const { form } = this.formRef.props;\r\n        form.validateFields((errors, values) => {\r\n            if (!errors) {\r\n                values['Sender'] = JSON.parse(localStorage.getItem('CURRENT_USER')).email;\r\n                console.log(values);\r\n                axios.post('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/users/mails', values).then(\r\n                    (response) => {\r\n                        this.hideNewEmailModal();\r\n                        console.log(response);\r\n                    }\r\n                ).catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const club = this.state.club;\r\n        const currentUser = JSON.parse(localStorage.getItem('CURRENT_USER'));\r\n        const newEmailModalVisibility = this.state.newEmailModalVisibility;\r\n\r\n        return (\r\n            <div className=\"website-layout-content-wrapper\">\r\n                <div className=\"website-layout-view-container\">\r\n                    {\r\n                        (club) &&\r\n                        <>\r\n                            <div className=\"card card-elevated club-details-card\">\r\n                                <div className=\"header-container\">\r\n                                    <img className=\"club-logo\" src={ club.photo } />\r\n                                    <h2 className=\"club-name\">{ club.name }</h2>\r\n                                    <p className=\"club-email\">{ (club.user) ? club.user.email : '' }</p>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"cell left\">\r\n                                        <p>{ club.eventsCount + ' events' }</p>\r\n                                    </div>\r\n                                    <div className=\"cell right\">\r\n                                        <p>{ 'Since ' + moment(club.creationDate, 'YYYY-MM-DD').format('YYYY') }</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"cell left\">\r\n                                        <p>{ (club.domain) ? club.domain.name : '' }</p>\r\n                                    </div>\r\n                                    <div className=\"cell right\">\r\n                                        <p>{ (club.institute) ? club.institute.name + ' - ' + club.institute.region : '' }</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"description-container\">\r\n                                    <h3>About</h3>\r\n                                    <p>{ club.description }</p>\r\n                                </div>\r\n                                {\r\n                                    (currentUser.role === 'Sponsor' || currentUser.role === 'Club') &&\r\n                                    <div className=\"actions-container\">\r\n                                        <Button className=\"btn-secondary-solid\" onClick={this.showNewEmailModal}>Send Email</Button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <NewEmailModal \r\n                                wrappedComponentRef={this.saveFormRef} \r\n                                visible={newEmailModalVisibility} \r\n                                onSend={this.sendEmail} \r\n                                onCancel={this.hideNewEmailModal}\r\n                                receiverEmailAddress={club.user.email}\r\n                            ></NewEmailModal>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nimport './sign-in.scss';\r\nimport { publishCurrentUserUpdate } from '../app/app.js';\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    onSignIn = (event) => {\r\n        event.preventDefault();\r\n        this.props.form.validateFields((errors, values) => {\r\n            if (!errors) {\r\n                axios.post('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/users/authentificate', values).then(\r\n                    (response) => {\r\n                        console.log(response);\r\n                        this.props.history.push('/');\r\n                        publishCurrentUserUpdate(response.data);\r\n                    }\r\n                ).catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        const emailError = isFieldTouched('Email') && getFieldError('Email');\r\n        const passwordError = isFieldTouched('Password') && getFieldError('Password');\r\n\r\n        return (\r\n            <div className=\"two-columns-container\">\r\n                <div className=\"column left-column\">\r\n                    <div className=\"website-layout-column-content-container\">\r\n                        <h1>Students events and clubs platform</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column right-column\">\r\n                    <div className=\"website-layout-column-content-container\">\r\n                        <h2>Sign in to your account</h2>\r\n                        <Form layout=\"vertical\" onSubmit={this.onSignIn}>\r\n                            <Form.Item validateStatus={emailError ? 'error' : ''} help={emailError || ''}>\r\n                                {\r\n                                    getFieldDecorator(\r\n                                        'Email',\r\n                                        {\r\n                                            rules: [\r\n                                                { required: true, message: 'This field is required' },\r\n                                                { type: 'email', message: 'Invalid email address' }\r\n                                            ]\r\n                                        }\r\n                                    )(\r\n                                        <Input placeholder=\"Email address\" />,\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                                {\r\n                                    getFieldDecorator(\r\n                                        'Password',\r\n                                        {\r\n                                            rules: [{ required: true, message: 'This field is required' }]\r\n                                        }\r\n                                    )(\r\n                                        <Input placeholder=\"Password\" type=\"password\" />,\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button className=\"btn-secondary-solid\" block htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>Sign in</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Form, Input, Button /*, Select*/ } from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nimport './sign-up.scss';\r\nimport { publishCurrentUserUpdate } from '../app/app.js';\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\n// const { Option } = Select;\r\n\r\n// const UNIVERSITIES = [\r\n//     {\r\n//         id: 'U001',\r\n//         name: 'Université de la Manouba',\r\n//         abbreviation: 'UMA',\r\n//         location: 'Manouba',\r\n//         institutions: [\r\n//             {\r\n//                 id: 'I001',\r\n//                 name: 'Ecole Nationale des Sciences de l\\'Informatique',\r\n//                 abbreviation: 'ENSI',\r\n//                 location: 'Manouba'\r\n//             },\r\n//             {\r\n//                 id: 'I002',\r\n//                 name: 'Institut Supérieur de Comptabilité et d\\'Administration des Entreprises',\r\n//                 abbreviation: 'ISCAE',\r\n//                 location: 'Manouba'\r\n//             },\r\n//             {\r\n//                 id: 'I003',\r\n//                 name: 'Ecole Supérieure de Commerce',\r\n//                 abbreviation: 'ESC',\r\n//                 location: 'Manouba'\r\n//             },\r\n//             {\r\n//                 id: 'I004',\r\n//                 name: 'Institut Supérieur des Arts Multimédia de la Manouba',\r\n//                 abbreviation: 'ISAMM',\r\n//                 location: 'Manouba'\r\n//             }\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 'U002',\r\n//         name: 'Université de Tunis El Manar',\r\n//         abbreviation: 'UTM',\r\n//         location: 'Tunis',\r\n//         institutions: [\r\n//             {\r\n//                 id: 'I005',\r\n//                 name: 'Institut Préparatoire aux Eudes d\\'Ingénieurs el Manar',\r\n//                 abbreviation: 'IPEIEM',\r\n//                 location: 'Tunis'\r\n//             },\r\n//             {\r\n//                 id: 'I006',\r\n//                 name: 'Institut Supérieur des Sciences Biologiques Appliquées de Tunis',\r\n//                 abbreviation: 'ISSBAT',\r\n//                 location: 'Tunis'\r\n//             },\r\n//             {\r\n//                 id: 'I007',\r\n//                 name: 'Faculté de Droit et des Sciences Politiques de Tunis',\r\n//                 abbreviation: 'FDSPT',\r\n//                 location: 'Tunis'\r\n//             }\r\n//         ]\r\n//     }\r\n// ];\r\n\r\n// const ORGANIZATION_TYPES = [\r\n//     {\r\n//         id: '',\r\n//         label: ''\r\n//     }\r\n// ];\r\n\r\n// const ACTIVITY_DOMAINS = [\r\n//     {\r\n//         id: '',\r\n//         label: ''\r\n//     }\r\n// ];\r\n\r\n/*\r\n\r\n    Student                 |       Club                    |       Sponsor\r\n-------------------------------------------------------------------------------------------\r\n    FirstName               |       FirstName               |       FirstName\r\n    LastName                |       LastName                |       LastName\r\n    Email                   |       Email                   |       Email\r\n    Password                |       Password                |       Password\r\n\r\n    university              |       clubName                |       organizationName\r\n    institution             |       university              |       organizationType\r\n                            |       institution             |       activityDomain\r\n\r\n*/\r\n\r\nexport default class SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedProfileType: '',\r\n            // institutions: []\r\n        };\r\n    }\r\n\r\n    onProfileTypeSelection(selectedProfileType) {\r\n        this.setState({\r\n            selectedProfileType: selectedProfileType\r\n        })\r\n    }    \r\n\r\n    confirmPassword = (rule, value, callback) => {\r\n        const { getFieldValue } = this.props.form;\r\n        if (value && value !== getFieldValue('Password')) {\r\n            callback('Password is not confirmed');\r\n        }\r\n        callback();\r\n    }\r\n\r\n    // onUniversitySelectionChange = (universityId) => {\r\n    //     const university = UNIVERSITIES.find((university) => university.id === universityId);\r\n    //     if (university) {\r\n    //         this.setState({\r\n    //             institutions: university.institutions\r\n    //         });\r\n    //         const { resetFields } = this.props.form;\r\n    //         resetFields('institution');\r\n    //     }\r\n    // }\r\n\r\n    onSignUp = (event) => {\r\n        event.preventDefault();\r\n        this.props.form.validateFields((errors, values) => {\r\n            if (!errors) {\r\n                const user = {\r\n                    Role: this.state.selectedProfileType,\r\n                    FirstName: values.FirstName,\r\n                    LastName: values.LastName,\r\n                    Email: values.Email,\r\n                    Password: values.Password\r\n                };\r\n                axios.post('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/users/register', user).then(\r\n                    () => {\r\n                        const credentials = {\r\n                            Email: values.Email,\r\n                            Password: values.Password\r\n                        };\r\n                        axios.post('https://cors-anywhere.herokuapp.com/https://cluby1.herokuapp.com/api/v1/users/authentificate', credentials).then(\r\n                            (response) => {\r\n                                publishCurrentUserUpdate(response.data);\r\n                                this.props.history.push('/');\r\n                            }\r\n                        ).catch(\r\n                            (error) => {\r\n                                console.log(error);\r\n                            }\r\n                        );\r\n                    }\r\n                ).catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const selectedProfileType = this.state.selectedProfileType;\r\n        // const universities = UNIVERSITIES.slice(0);\r\n        // const institutions = this.state.institutions;\r\n        // const organizationTypes = ORGANIZATION_TYPES.slice(0);\r\n        // const activityDomains = ACTIVITY_DOMAINS.slice(0);\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n        return (\r\n            <div className=\"two-columns-container\">\r\n                <div className=\"column left-column\">\r\n                    <div className=\"website-layout-column-content-container\">\r\n                        <h1>Students events and clubs platform</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column right-column\">\r\n                    <div className=\"website-layout-column-content-container\">\r\n                        {\r\n                            selectedProfileType.length <= 0 && \r\n                            <>\r\n                                <h2>You are?</h2>\r\n                                <Button className=\"btn-secondary-outlined\" block onClick={() => this.onProfileTypeSelection('Student')}>Student</Button>\r\n                                <Button className=\"btn-secondary-outlined\" block onClick={() => this.onProfileTypeSelection('Club')}>Club</Button>\r\n                                <Button className=\"btn-secondary-outlined\" block onClick={() => this.onProfileTypeSelection('Sponsor')}>Sponsor</Button>\r\n                            </>\r\n                        }\r\n                        {\r\n                            selectedProfileType.length > 0 && \r\n                            <>\r\n                                <h2>Create your account</h2>\r\n                                <Form layout=\"vertical\" onSubmit={this.onSignUp}>\r\n                                    <Form.Item validateStatus={(isFieldTouched('FirstName') && getFieldError('FirstName')) ? 'error' : ''} help={(isFieldTouched('FirstName') && getFieldError('FirstName')) || ''}>\r\n                                    {\r\n                                        getFieldDecorator(\r\n                                            'FirstName', \r\n                                            {\r\n                                                rules: [\r\n                                                    { required: true, whitespace: true, message: 'This field is required' }\r\n                                                ]\r\n                                            }\r\n                                        )(\r\n                                            <Input placeholder=\"First name\" />,\r\n                                        )\r\n                                    }\r\n                                    </Form.Item>\r\n                                    <Form.Item validateStatus={(isFieldTouched('LastName') && getFieldError('LastName')) ? 'error' : ''} help={(isFieldTouched('LastName') && getFieldError('LastName')) || ''}>\r\n                                    {\r\n                                        getFieldDecorator(\r\n                                            'LastName', \r\n                                            {\r\n                                                rules: [\r\n                                                    { required: true, whitespace: true, message: 'This field is required' }\r\n                                                ]\r\n                                            }\r\n                                        )(\r\n                                            <Input placeholder=\"Last name\" />,\r\n                                        )\r\n                                    }\r\n                                    </Form.Item>\r\n                                    <Form.Item validateStatus={(isFieldTouched('Email') && getFieldError('Email')) ? 'error' : ''} help={(isFieldTouched('Email') && getFieldError('Email')) || ''}>\r\n                                    {\r\n                                        getFieldDecorator(\r\n                                            'Email', \r\n                                            {\r\n                                                rules: [\r\n                                                    { required: true, message: 'This field is required' },\r\n                                                    { type: 'email', message: 'Invalid email address' }\r\n                                                ]\r\n                                            }\r\n                                        )(\r\n                                            <Input placeholder=\"Email address\" />,\r\n                                        )\r\n                                    }\r\n                                    </Form.Item>\r\n                                    <Form.Item validateStatus={(isFieldTouched('Password') && getFieldError('Password')) ? 'error' : ''} help={(isFieldTouched('Password') && getFieldError('Password')) || ''}>\r\n                                    {\r\n                                        getFieldDecorator(\r\n                                            'Password', \r\n                                            {\r\n                                                rules: [\r\n                                                    { required: true, message: 'This field is required' },\r\n                                                    { pattern: /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/g, message: 'Weak password' }\r\n                                                ]\r\n                                            }\r\n                                        )(\r\n                                            <Input placeholder=\"Password\" type=\"password\" />,\r\n                                        )\r\n                                    }\r\n                                    </Form.Item>\r\n                                    <Form.Item validateStatus={(isFieldTouched('PasswordConfirmation') && getFieldError('PasswordConfirmation')) ? 'error' : ''} help={(isFieldTouched('PasswordConfirmation') && getFieldError('PasswordConfirmation')) || ''}>\r\n                                    {\r\n                                        getFieldDecorator(\r\n                                            'PasswordConfirmation', \r\n                                            {\r\n                                                rules: [\r\n                                                    { required: true, message: 'This field is required' },\r\n                                                    { validator: this.confirmPassword }\r\n                                                ]\r\n                                            }\r\n                                        )(\r\n                                            <Input placeholder=\"Password confirmation\" type=\"password\" />,\r\n                                        )\r\n                                    }\r\n                                    </Form.Item>\r\n                                    {/* {\r\n                                        (selectedProfileType === 'Club') && \r\n                                        <Form.Item validateStatus={(isFieldTouched('clubName') && getFieldError('clubName')) ? 'error' : ''} help={(isFieldTouched('clubName') && getFieldError('clubName')) || ''}>\r\n                                        {\r\n                                            getFieldDecorator(\r\n                                                'clubName', \r\n                                                {\r\n                                                    rules: [\r\n                                                        { required: true, whitespace: true, message: 'This field is required' }\r\n                                                    ]\r\n                                                }\r\n                                            )(\r\n                                                <Input placeholder=\"Club name\" />,\r\n                                            )\r\n                                        }\r\n                                        </Form.Item>\r\n                                    } */}\r\n                                    {/* {\r\n                                        (selectedProfileType === 'Student' || selectedProfileType === 'Club') && \r\n                                        <>\r\n                                            <Form.Item validateStatus={(isFieldTouched('university') && getFieldError('university')) ? 'error' : ''} help={(isFieldTouched('university') && getFieldError('university')) || ''}>\r\n                                            {\r\n                                                getFieldDecorator(\r\n                                                    'university', \r\n                                                    {\r\n                                                        rules: [\r\n                                                            { required: true, whitespace: true, message: 'This field is required' }\r\n                                                        ]\r\n                                                    }\r\n                                                )(\r\n                                                    <Select\r\n                                                        placeholder=\"University\" \r\n                                                        showSearch \r\n                                                        optionFilterProp=\"children\" \r\n                                                        filterOption={(input, option) =>\r\n                                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                        }\r\n                                                        onChange={this.onUniversitySelectionChange}\r\n                                                    >\r\n                                                    {\r\n                                                        universities.map(\r\n                                                            (university) => {\r\n                                                                return (\r\n                                                                    <Option key={university.id} value={university.id}>{university.name}</Option>\r\n                                                                );\r\n                                                            }\r\n                                                        )\r\n                                                    }\r\n                                                    </Select>,\r\n                                                )\r\n                                            }\r\n                                            </Form.Item>\r\n                                            {\r\n                                                (institutions && institutions.length > 0) && \r\n                                                <Form.Item validateStatus={(isFieldTouched('institution') && getFieldError('institution')) ? 'error' : ''} help={(isFieldTouched('institution') && getFieldError('institution')) || ''}>\r\n                                                {\r\n                                                    getFieldDecorator(\r\n                                                        'institution', \r\n                                                        {\r\n                                                            rules: [\r\n                                                                { required: true, whitespace: true, message: 'This field is required' }\r\n                                                            ]\r\n                                                        }\r\n                                                    )(\r\n                                                        <Select\r\n                                                            placeholder=\"Institution\" \r\n                                                            showSearch \r\n                                                            optionFilterProp=\"children\" \r\n                                                            filterOption={(input, option) =>\r\n                                                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                            }\r\n                                                        >\r\n                                                        {\r\n                                                            institutions.map(\r\n                                                                (institution) => {\r\n                                                                    return (\r\n                                                                        <Option key={institution.id} value={institution.id}>{institution.name}</Option>\r\n                                                                    );\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </Select>,\r\n                                                    )\r\n                                                }\r\n                                                </Form.Item>\r\n                                            }\r\n                                        </>\r\n                                    } */}\r\n                                    {/* {\r\n                                        (selectedProfileType === 'Sponsor') && \r\n                                        <>\r\n                                            <Form.Item validateStatus={(isFieldTouched('organizationName') && getFieldError('organizationName')) ? 'error' : ''} help={(isFieldTouched('organizationName') && getFieldError('organizationName')) || ''}>\r\n                                            {\r\n                                                getFieldDecorator(\r\n                                                    'organizationName', \r\n                                                    {\r\n                                                        rules: [\r\n                                                            { required: true, whitespace: true, message: 'This field is required' }\r\n                                                        ]\r\n                                                    }\r\n                                                )(\r\n                                                    <Input placeholder=\"Organization name\" />,\r\n                                                )\r\n                                            }\r\n                                            </Form.Item>\r\n                                            <Form.Item validateStatus={(isFieldTouched('organizationType') && getFieldError('organizationType')) ? 'error' : ''} help={(isFieldTouched('organizationType') && getFieldError('organizationType')) || ''}>\r\n                                            {\r\n                                                getFieldDecorator(\r\n                                                    'organizationType', \r\n                                                    {\r\n                                                        rules: [\r\n                                                            { required: true, whitespace: true, message: 'This field is required' }\r\n                                                        ]\r\n                                                    }\r\n                                                )(\r\n                                                    <Select\r\n                                                        placeholder=\"Organization type\" \r\n                                                        showSearch \r\n                                                        optionFilterProp=\"children\" \r\n                                                        filterOption={(input, option) =>\r\n                                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                        }\r\n                                                    >\r\n                                                    {\r\n                                                        organizationTypes.map(\r\n                                                            (organizationType) => {\r\n                                                                return (\r\n                                                                    <Option key={organizationType.id} value={organizationType.id}>{organizationType.label}</Option>\r\n                                                                );\r\n                                                            }\r\n                                                        )\r\n                                                    }\r\n                                                    </Select>,\r\n                                                )\r\n                                            }\r\n                                            </Form.Item>\r\n                                            <Form.Item validateStatus={(isFieldTouched('activityDomain') && getFieldError('activityDomain')) ? 'error' : ''} help={(isFieldTouched('activityDomain') && getFieldError('activityDomain')) || ''}>\r\n                                            {\r\n                                                getFieldDecorator(\r\n                                                    'activityDomain', \r\n                                                    {\r\n                                                        rules: [\r\n                                                            { required: true, whitespace: true, message: 'This field is required' }\r\n                                                        ]\r\n                                                    }\r\n                                                )(\r\n                                                    <Select\r\n                                                        placeholder=\"Activity domain\" \r\n                                                        showSearch \r\n                                                        optionFilterProp=\"children\" \r\n                                                        filterOption={(input, option) =>\r\n                                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                        }\r\n                                                    >\r\n                                                    {\r\n                                                        activityDomains.map(\r\n                                                            (activityDomain) => {\r\n                                                                return (\r\n                                                                    <Option key={activityDomain.id} value={activityDomain.id}>{activityDomain.label}</Option>\r\n                                                                );\r\n                                                            }\r\n                                                        )\r\n                                                    }\r\n                                                    </Select>,\r\n                                                )\r\n                                            }\r\n                                            </Form.Item>\r\n                                        </>\r\n                                    } */}\r\n                                    <Form.Item>\r\n                                        <Button className=\"btn-secondary-solid\" block htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>Sign up</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport ClubDetails from '../clubs/club-details';\r\nimport EventDetails from '../events/event-details';\r\nimport Events from '../events';\r\nimport SignIn from '../sign-in/sign-in';\r\nimport SignUp from '../sign-up/sign-up';\r\nimport EditProfile from '../edit-profile';\r\nimport axios from 'axios' ; \r\nimport { BASE_URL } from '../../const';\r\n\r\n\r\nexport default class StudentView extends Component {\r\n\r\n    componentDidMount(){\r\n        axios.get(BASE_URL + 'api/v1/students/user/' + JSON.parse(localStorage.getItem('CURRENT_USER')).id)\r\n        .then(data=>{\r\n            localStorage.setItem('studentId', data.data.id);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path={`/`} component={Events} />\r\n                <Route path={`/events/event-details/:id`} component={EventDetails} />\r\n                <Route path={`/clubs/club-details/:id`} component={ClubDetails} />\r\n                <Route path={`/sign-in`} component={SignIn} />\r\n                <Route path={`/sign-up`} component={SignUp} />\r\n                <Route path={`/edit-profile`} component={EditProfile} />\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Events from '../events' ;\r\nimport EventDetails from '../events/event-details';\r\nimport ClubDetails from '../clubs/club-details';\r\nimport Emails from '../emails';\r\nimport EditProfile from '../edit-profile';\r\n\r\n\r\nexport default class SponsorView extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path={`/`} component={Events} />\r\n                <Route path={`/events/event-details/:id`} component={EventDetails} />\r\n                <Route path={`/clubs/club-details/:id`} component={ClubDetails} />\r\n                <Route path={`/emails`} component={Emails} />\r\n                <Route path={`/edit-profile`} component={EditProfile} />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n}\r\n","import { Form } from 'antd';\r\n\r\nimport SignIn from './sign-in';\r\n\r\nexport default Form.create()(SignIn);\r\n","import { Form } from 'antd';\r\n\r\nimport SignUp from './sign-up';\r\n\r\nexport default Form.create()(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport SignIn from '../sign-in' ;\r\nimport SignUp from '../sign-up' ;\r\nimport Events from '../events' ;\r\nimport EventDetails from '../events/event-details';\r\nimport ClubDetails from '../clubs/club-details';\r\n\r\n\r\nexport default class VisitorView extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                {/* <div className=\"website-layout-content-wrapper\">\r\n                    <div className=\"website-layout-view-container\"> */}\r\n                        <Route exact path={`/`} component={Events} />\r\n                        <Route path={`/events/event-details/:id`} component={EventDetails} />\r\n                        <Route path={`/clubs/club-details/:id`} component={ClubDetails} />\r\n                        <Route path={`/sign-in`} component={SignIn} />\r\n                        <Route path={`/sign-up`} component={SignUp} />\r\n                    {/* </div>\r\n                </div> */}\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Layout, Icon } from 'antd';\r\n\r\nimport HeaderUserInfo from '../header-user-info';\r\nimport StudentView from '../student-view';\r\nimport SponsorView from '../sponsor-view';\r\nimport VisitorView from '../visitor-view';\r\n\r\nimport logoLight from '../../assets/imgs/logo-light.png';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\n\r\nexport default class WebsiteLayout extends Component {\r\n\r\n    render() {\r\n        let userView;\r\n        if (this.props.currentUser && this.props.currentUser.role === 'Student') {\r\n            userView = <StudentView />;\r\n        } else if (this.props.currentUser && this.props.currentUser.role === 'Sponsor') {\r\n            userView = <SponsorView />;\r\n        } else {\r\n            userView = <VisitorView />;\r\n        }\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Header className=\"website-layout-header\">\r\n                    <div className=\"website-layout-content-wrapper\">\r\n                        <div className=\"header-content-container\">\r\n                            <div className=\"header-item clickable\">\r\n                                <Link to=\"/\">\r\n                                    <img src={logoLight} alt=\"Cluby\" className=\"logo\" />\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"space-filler\"></div>\r\n                            {\r\n                                (this.props.currentUser && this.props.currentUser.role === 'Sponsor') &&\r\n                                <div className=\"header-item clickable\">\r\n                                    <Link to=\"/emails\">\r\n                                        <Icon type=\"mail\" />\r\n                                    </Link>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                this.props.currentUser ? (\r\n                                    <div className=\"header-item clickable\">\r\n                                        <HeaderUserInfo currentUser={this.props.currentUser} />\r\n                                    </div>\r\n                                ) : (\r\n                                    <>\r\n                                        <div className=\"header-item clickable\">\r\n                                            <Link to=\"/sign-up\">Sign up</Link>\r\n                                        </div>\r\n                                        <div className=\"header-item clickable\">\r\n                                            <Link to=\"/sign-in\">Sign in</Link>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    { userView }\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\nimport BackofficeLayout from '../backoffice-layout';\r\nimport WebsiteLayout from '../website-layout';\r\n\r\nconst currentUserSubject = new Subject();\r\n\r\nexport const publishCurrentUserUpdate = (currentUser) => currentUserSubject.next(currentUser);\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    currentUserSubscription = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: JSON.parse(localStorage.getItem('CURRENT_USER'))\r\n        };\r\n        this.currentUserSubscription = currentUserSubject.subscribe(\r\n            (currentUser) => {\r\n                localStorage.setItem('CURRENT_USER', JSON.stringify(currentUser));\r\n                this.setState({\r\n                    currentUser: currentUser\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const currentUser = this.state.currentUser;\r\n        let layout;\r\n        if (currentUser && currentUser.role === 'Club') {\r\n            layout = <BackofficeLayout currentUser={currentUser} />;\r\n        } else {\r\n            layout = <WebsiteLayout currentUser={currentUser} />;\r\n        }\r\n        return (\r\n            <Router>\r\n                { layout }\r\n            </Router>\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.currentUserSubscription.unsubscribe();\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/main.scss';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.0e2b3312.png\";"],"sourceRoot":""}